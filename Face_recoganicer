import cv2
import mediapipe as mp

mp_face = mp.solutions.face_detection
mp_hands = mp.solutions.hands
mp_drawing = mp.solutions.drawing_utils


face_detection = mp_face.FaceDetection(min_detection_confidence=0.5)
hands = mp_hands.Hands(max_num_hands=2, min_detection_confidence=0.5)


def get_working_camera(max_index=5):
    for i in range(max_index):
        cap = cv2.VideoCapture(i)
        if cap.isOpened():
            return cap
        cap.release()
    return None

cap = get_working_camera()
if cap is None:
    print("No working camera found.")
    exit()

while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        print("Failed to grab frame")
        break

    frame = cv2.resize(frame, (640, 480))

    frame = cv2.flip(frame, 1)

 
    rgb_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)


    face_results = face_detection.process(rgb_frame)

 
    hand_results = hands.process(rgb_frame)

    labels = []


    if face_results.detections:
        labels.append("Face")
        for detection in face_results.detections:
            mp_drawing.draw_detection(frame, detection)


    if hand_results.multi_handedness and hand_results.multi_hand_landmarks:
        for idx, hand_handedness in enumerate(hand_results.multi_handedness):
            hand_label = hand_handedness.classification[0].label  # already correct after mirror
            labels.append(f"{hand_label} Hand")

            hand_landmarks = hand_results.multi_hand_landmarks[idx]
            mp_drawing.draw_landmarks(frame, hand_landmarks, mp_hands.HAND_CONNECTIONS)


    label_text = ", ".join(labels) if labels else "No detection"
    cv2.putText(frame, label_text, (30, 50),
                cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)

    cv2.imshow("Live Detection", frame)

    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
